[{"authors":["rob"],"categories":null,"content":" About me ","date":1574267400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1574267400,"objectID":"1e69b33059cc9342e33da675bf1c651a","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/rob/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/rob/","section":"authors","summary":" About me ","tags":null,"title":"Rob Trangucci","type":"authors"},{"authors":["xiping"],"categories":null,"content":" About me ","date":1573057800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1573057800,"objectID":"2dee3fb3bf4f399c6dd125cf65a952be","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/ziping/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/ziping/","section":"authors","summary":" About me ","tags":null,"title":"Ziping Xu","type":"authors"},{"authors":["jregier"],"categories":null,"content":" About me I’m an applied statistician working on problems in astronomy and genomics. Graphical models, variational inference, and deep learning are some of the statistical tools I use.\nPreviously, I was a statistics PhD student at UC Berkeley and a postdoc in Michael Jordan’s research group. For more about me, please see my publications and my CV.\n","date":1571848200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1571848200,"objectID":"a47974f9e0ec82ef034bbaf066bfb35e","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/jregier/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/jregier/","section":"authors","summary":"About me I’m an applied statistician working on problems in astronomy and genomics. Graphical models, variational inference, and deep learning are some of the statistical tools I use.\nPreviously, I was a statistics PhD student at UC Berkeley and a postdoc in Michael Jordan’s research group. For more about me, please see my publications and my CV.","tags":null,"title":"Jeffrey Regier","type":"authors"},{"authors":["simon"],"categories":null,"content":" About me I currently am a first year Ph.D. Student at the University of Michigan. My research interest are broadly contained in computational statistics. In particular, penalized regression and variable selection problems as well as approximate Bayesian inference and MCMC methods are all of interest to me. Previously, I worked as a Data Science intern at the Ubisoft Montreal User Research Lab on online skill rating using approximate Bayesian inference. I did a Master’s at the University of Montreal and my thesis focused on an adaptive Multiple-Try Metropolis algorithm aimed at sampling from complex distributions.\n","date":1570638600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1570638600,"objectID":"39676266dc03f7a9ebc998657bf4cd2d","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/simon/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/simon/","section":"authors","summary":"About me I currently am a first year Ph.D. Student at the University of Michigan. My research interest are broadly contained in computational statistics. In particular, penalized regression and variable selection problems as well as approximate Bayesian inference and MCMC methods are all of interest to me. Previously, I worked as a Data Science intern at the Ubisoft Montreal User Research Lab on online skill rating using approximate Bayesian inference.","tags":null,"title":"Simon Fontaine","type":"authors"},{"authors":["derek"],"categories":null,"content":" About me ","date":1570033800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1570033800,"objectID":"bc34d76bc3e159b0c10dc7a9fb6aef07","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/dan/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/dan/","section":"authors","summary":" About me ","tags":null,"title":"Dan Kessler","type":"authors"},{"authors":["derek"],"categories":null,"content":" About me ","date":1568835000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1568835000,"objectID":"26db54e84a45b767b8ee836b1c5f8134","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/derek/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/derek/","section":"authors","summary":" About me ","tags":null,"title":"Derek Hansen","type":"authors"},{"authors":["admin"],"categories":null,"content":" About us This page is for the Computing Club overseen by the UM Stats PhD Computing Committee. Information about meeting times and presented topics will be posted here.\nThe only guiding principle is that the topic should have some potential application to a Statistics research workload, which leaves a broad range of topics.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://UMichStatistics.github.io/ComputingClub/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/ComputingClub/authors/admin/","section":"authors","summary":"About us This page is for the Computing Club overseen by the UM Stats PhD Computing Committee. Information about meeting times and presented topics will be posted here.\nThe only guiding principle is that the topic should have some potential application to a Statistics research workload, which leaves a broad range of topics.","tags":null,"title":"Statistics Computing Club","type":"authors"},{"authors":null,"categories":null,"content":"","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"fbcc31b76b07e6c533799d6286568bb5","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/hugo_academic/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ComputingClub/workshops/hugo_academic/","section":"workshops","summary":"A tutorial on how to create a personal academic website using the Academic theme for Hugo and host to on GitHub pages or UMich personal space.","tags":null,"title":"Building \u0026 Hosting a Personal Academic Website Using Hugo","type":"docs"},{"authors":null,"categories":null,"content":" This website is powered the Academic theme for Hugo. The documentation they provide is quite extensive, so we summarize some of the important features relevant to the current website and present workflow ideas on how to update the website.\nHugo and Markdown While the website consists of html source interpreted by the visitor\u0026rsquo;s browser, its content is generated from Markdown. Hugo acts as an interpreter and compiler: it translates the file structure, the Markdown files and some configuration files (yaml or toml) into the html files visible to the visitor.\nRepository description The website is hosted on GitHub Pages. The static contents of the website appears in the docs folder of the UmichStatistics GitHub organization repository ComputingClub. The other folders and files of the repository are used to generate the website: only the docs folder is necessary for the static website to be operational.\nDeployment Any change in the files outside of the docs folder will not affect the public website. In order for the changes to become public, it is necessary to deploy the website, i.e. to use Hugo to update the files in docs. Hence, anyone updating the website needs to run Hugo for the changes to appear. More details in Deployment\nThe maintainers are currently considerings ways to automatically deploy the website upon a push to the repository. More to come\u0026hellip;\nExternal resources  Academic Hugo Documentation  Page Builder and widgets description  Font Awesome Icons  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"989426793d2ad203cae764c09b8fff59","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/edit_site/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ComputingClub/workshops/edit_site/","section":"workshops","summary":"A guide on how to add new content and modify the website.","tags":null,"title":"Editing the Club's website","type":"docs"},{"authors":null,"categories":null,"content":" What is Functional Programming?  \"Functional programming is a programming paradigm ... that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.\" - Wikipedia   Functions are like those in mathematics:  They always return the same output for a given input No side-effects (e.g. modification of global variables) Functions that satisfy (1-2) are called pure  Functions are first-class objects which can be passed as arguments to other functions (a.k.a. functionals) There is no changing state as the program runs; values are assigned once as functions of other values and inputs Everyday example: Microsoft Excel (without any VBA scripting!)  Why use functional programming?  Through avoiding mutable state and composing pure functions, an FP program is also a pure function of its input This makes FP programs\u0026hellip;  Modular Predictable Easier to test Avoid common pitfalls involving changing state (e.g. global variables)   Why use functional programming? Natural functionals in the FP paradigm include \u0026hellip;\n map: (where $f: X \\to Y$)  $$((x_1, \u0026hellip;, x_n), f) \\to (f(x_1), \u0026hellip;, f(x_n)))$$\n filter: (where $f$ is a predicate function $f:X \\to \\{0, 1\\}$)  $$((x_1, \u0026hellip;, x_n), f) \\to (x_i : f(x_i) = 1)$$\n reduce: (where $f$ is an operator function $f:X \\times X \\to X$)  $$((x_1, \u0026hellip;, x_n), f) \\to f(x_1, f(x_2, f(x_3, f(\u0026hellip;))))$$\nFunctional Programming in R  R is multi-paradigm: it does not strictly adhere to FP principles, but it offers capability to use FP patterns Examples in base R include:  Map, lapply, sapply, apply, vapply, mapply - Reduce - Filter  The purrr package by Hadley Wickham et al improves the the functional programming tools to R which are syntactically consistent and type-safe.  Mapping  map is pretty much equivalent to lapply, but has some additional features\nlibrary(purrr) my_sqrt \u0026lt;- function(x) sqrt(x) str(map(c(1,2,3,4,5), my_sqrt))  ## List of 5 ## $ : num 1 ## $ : num 1.41 ## $ : num 1.73 ## $ : num 2 ## $ : num 2.24  str(lapply(c(1,2,3,4,5), my_sqrt))  ## List of 5 ## $ : num 1 ## $ : num 1.41 ## $ : num 1.73 ## $ : num 2 ## $ : num 2.24   Mapping  If we want an atomic double vector instead of a list, the map_dbl ensures we always receive that. sapply does the same thing in this particular instance, but we can run into problems\u0026hellip;\nstr(map_dbl(c(1,2,3,4,5), my_sqrt))  ## num [1:5] 1 1.41 1.73 2 2.24  str(sapply(c(1,2,3,4,5), my_sqrt))  ## num [1:5] 1 1.41 1.73 2 2.24   Problem: sapply is not type-safe!  Example: Our colleague worked hard to make my_sqrt handle any real number. They even overwrote the function my_sqrt to make the transition seamless!\nsqrt_general \u0026lt;- function(x) { if(x \u0026gt;= 0) sqrt(x) else return(paste0(sqrt(abs(x)), \u0026quot;i\u0026quot;)) } my_sqrt \u0026lt;- sqrt_general my_sqrt(5)  ## [1] 2.236068  my_sqrt(-5)  ## [1] \u0026quot;2.23606797749979i\u0026quot;   Problem: sapply is not type-safe! str(sapply(c(1,2,3,4,5), my_sqrt))  ## num [1:5] 1 1.41 1.73 2 2.24  str(sapply(c(-1,2,-3,4,5), my_sqrt))  ## chr [1:5] \u0026quot;1i\u0026quot; \u0026quot;1.4142135623731\u0026quot; \u0026quot;1.73205080756888i\u0026quot; \u0026quot;2\u0026quot; ...   This is a great way to propogate errors. We have no way to guarentee whether sapply will return a \u0026ldquo;double\u0026rdquo; vector or a \u0026ldquo;string\u0026rdquo; vector.  map_dbl is type-safe! str(map_dbl(c(1,2,3,4,5), my_sqrt))  ## num [1:5] 1 1.41 1.73 2 2.24  try(str(map_dbl(c(-1,2,-3,4,5), my_sqrt)))  ## Error : Can't coerce element 1 from a character to a double   The map_* family of functions allows us to explictly impose which type we expect the output vector to be.  They \u0026ldquo;return an atomic vector of the indicated type (or die trying)\u0026rdquo; (documentation)   map_chr is type-safe! map_chr(c(1,2,3,4,5), my_sqrt)  ## [1] \u0026quot;1.000000\u0026quot; \u0026quot;1.414214\u0026quot; \u0026quot;1.732051\u0026quot; \u0026quot;2.000000\u0026quot; \u0026quot;2.236068\u0026quot;  map_chr(c(-1,2,-3,4,5), my_sqrt)  ## [1] \u0026quot;1i\u0026quot; \u0026quot;1.414214\u0026quot; \u0026quot;1.73205080756888i\u0026quot; ## [4] \u0026quot;2.000000\u0026quot; \u0026quot;2.236068\u0026quot;   Suppose our colleague convinced our team lead that we should work exclusively with strings to accomodate complex numbers We use map_chr to reflect that now we want the output to be a character vector. No errors now because both doubles and characters can be coerced to double.  map_* is type-safe!  sapply implicitly coerces to an atomic vector in the most general unit in the output for \u0026ldquo;convenience\u0026rdquo;, but this is very prone to unexpected errors. Most of the time, it is better to be explicit to catch any errors early and keep type stability. Can also use _lgl for logical, _int for integer, _raw for raw type, _dfr and _dfc for data-table columns and rows.  Some more cool features of map - anonymous functions  Can construct function in the argument using symbol notation\nmap_dbl(c(1,2,3,4,5), ~.x^2 + .x + sin(.x))  ## [1] 2.841471 6.909297 12.141120 19.243198 29.041076   Some more cool features of map - multiple arguments  Can use map2_* for 2 argument functions; pmap_* for n-argument functions The $i$th positional argument can be referenced with ..i syntax.\nmap2_dbl(c(1,2,3,4,5), c(5,6,8,9,11), ~.x^2 + .y^2 + sin(.x))  ## [1] 26.84147 40.90930 73.14112 96.24320 145.04108  pmap_dbl(list(1:5, 11:15, 21:25), ~..1 + ..2 + ..3)  ## [1] 33 36 39 42 45  pmap_dbl(list(1:5, 11:15, 21:25), function(x,y,z) x+y+z)  ## [1] 33 36 39 42 45   Some more cool features of map - imap  Can use imap if the names of the input list/vector are important. imap_*(x, f(x,y)) is equivalent to map2_*(x, names(x), f(x,y)) The type dfr indicates that we expect the function to output a DataFrame Row, which are then bound row-wise into a single dataframe.\nlibrary(dplyr) midterm_grades \u0026lt;- c(Dan = 100, Derek = 20, Rob = 100) grade_tbl \u0026lt;- imap_dfr(midterm_grades, ~tibble(name = .y, grade = .x, pass = .x \u0026gt;= 50)) grade_tbl  ## # A tibble: 3 x 3 ## name grade pass ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;lgl\u0026gt; ## 1 Dan 100 TRUE ## 2 Derek 20 FALSE ## 3 Rob 100 TRUE   Some more cool features of map - map_if  map_if allows for use of a predicate function (or a vector) to only apply to certain values. It always returns a list (since the input and output could be of different types).\nstr(map_if(midterm_grades, !grade_tbl$pass, ~NA_real_))  ## List of 3 ## $ Dan : num 100 ## $ Derek: num NA ## $ Rob : num 100  str(map_if(midterm_grades, ~.x \u0026lt;= 50, ~\u0026quot;FAIL!!\u0026quot;))  ## List of 3 ## $ Dan : num 100 ## $ Derek: chr \u0026quot;FAIL!!\u0026quot; ## $ Rob : num 100   Some more cool features of map - map_if  modify_if`is the same asmap_if`, but enforces that the type is the same as the input\nstr(modify_if(midterm_grades, ~.x \u0026lt;= 50, ~NA_real_))  ## Named num [1:3] 100 NA 100 ## - attr(*, \u0026quot;names\u0026quot;)= chr [1:3] \u0026quot;Dan\u0026quot; \u0026quot;Derek\u0026quot; \u0026quot;Rob\u0026quot;  try(str(modify_if(midterm_grades, ~.x \u0026lt;= 50, ~\u0026quot;FAIL!!\u0026quot;)))  ## Error : Can't coerce element 1 from a character to a double   keep and discard ## Only keep students who passed keep(midterm_grades, ~.x \u0026gt;= 50)  ## Dan Rob ## 100 100  ## Remove students who passed to get a list of students on notice discard(midterm_grades, grade_tbl$pass)  ## Derek ## 20  purrr in the wild - succinctly extract results from different models library(dplyr) library(magrittr) aic_bic_tbl \u0026lt;- list( `Binary Poverty Indicator Interaction` = logis_res_census_binpoor, `Poverty Rate Interaction` = logis_res_census, `Income Interaction` = logis_res_census_inc_interact, `No Income` = logis_res_census_noincome, `No Poverty Rate` = logis_res_census_nopoor ) %\u0026gt;% map2_dfr(names(.), ~tibble(model = .y, aic = AIC(.x), bic = BIC(.x))) %\u0026gt;% arrange(aic) aic_bic_tbl   Example directly from my applied qual. (Could have used imap_dfr!)  purrr was designed by the same authors as dplyr and plays nicely with other tidyverse functions (including the pipe object %\u0026gt;%).  purrr in the wild - reduce to best model best_model \u0026lt;- list( `Binary Poverty Indicator Interaction` = logis_res_census_binpoor, `Poverty Rate Interaction` = logis_res_census, `Income Interaction` = logis_res_census_inc_interact, `No Income` = logis_res_census_noincome, `No Poverty Rate` = logis_res_census_nopoor ) %\u0026gt;% reduce(~ifelse(BIC(.x) \u0026lt; BIC(.y), .y, .x))   reduce function applies an operator function to reduce a vector to one value Illustrating example, but in reality it would be more efficient to use which.max(aic_bic_tbl$bic) (because it uses C code and more efficient algorithm)  Conclusions  Through the Functional Programming (FP) paradigm, purrr allows for more concise and error-robust R coding patterns Allows complex operations to be composed from simple building blocks by operating on user-specified functions Many, many more features are contained in purrr beyond what was shown today  Further reading  Tidyverse website \u0026ldquo;Iteration\u0026rdquo; chapter in R for Data Science Hadley\u0026rsquo;s plyr package which handles array and data.frame inputs. = dplyr + purrr``` --  Thank You! ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"ada162679960820613751d888c288931","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/purrr/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ComputingClub/workshops/purrr/","section":"workshops","summary":"Functional Programming in R with purrr","tags":null,"title":"Functional Programming in R with purrr","type":"docs"},{"authors":null,"categories":null,"content":"A collection of external resources classified by subjects (see menu on the left). Feel free to add any link to external resources here!\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c1a3532c7e6c5ec860704a6a171c03","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/resources/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/ComputingClub/workshops/resources/","section":"workshops","summary":"A collection of external resources","tags":null,"title":"Resources","type":"docs"},{"authors":null,"categories":null,"content":" Language, packages Conda integration in GreatLakes by UMich Data Analysis Networking Group\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"e8915e1808b0a1f9da4026c862ff0a3e","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/resources/hpc/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ComputingClub/workshops/resources/hpc/","section":"workshops","summary":"Language, packages Conda integration in GreatLakes by UMich Data Analysis Networking Group","tags":null,"title":"High Performance Computing","type":"docs"},{"authors":null,"categories":null,"content":" The lazy way If you only need to add some post/meeting/workshop to the website, here is a simple way to deploy your new content to the website without much hassle.\n Create your content\u0026mdash;The first step is to create your specific content by producing the necessary Markdown files. See Creating content for details on how to do so. Push your content\u0026mdash;You then need to add your content to the website content directory. If you have access to the UMichStatistics repository, then you can do it directly using your favorite \u0026lsquo;git\u0026rsquo; workflow. Otherwise, contact the maintainers for them to add your content to the site. Deploy your content\u0026mdash;As mentionned, an update of the files outside the docs folder will not affect the public website. The deployment must be done through Hugo and, for now, this must be done manually. Contact the maintainers for it to happen.  The good way Hopefully, you will want to deploy your changes yourself. To do this, here is the summary of the procedure:\n Have a local copy of the website on your machine. Update your local version. Deploy your local version to your localhost using Hugo in order to update the docs contents. Push your changes, including both the source and the updated docs to the site\u0026rsquo;s repository.  With the workflow, your changes will instantaneously update the public website. Also, since you first deploy on your local machine, you are able to see the results of your changes before them becoming public. Finally, pushing both the source and the updated docs prevents conflicts in future updates.\nRequirements To use this process, you will need:\n Access to the organization repository; git installed on your machine (see this guide); Basic git knowledge (clone, pull, commit and push); Hugo installed on your machine (see this guide. The installation on Windows is tedious and the only way I could make it work was R \u0026gt; install pacakge blogdown \u0026gt; blogdown::install_hugo() and manually add its path to the system environment variables.)  Update the local version First, you will need the latest version of the website stored locally on your machine.\nIf you have not cloned the repository yet, do so:\ngit clone https://github.com/UMichStatistics/ComputingClub.git \u0026lt;new-folder-name\u0026gt;  If you already have cloned the repository, make sure it is up to date. In a command prompt, move to the site local folder\ncd \u0026lt;path-to-folder\u0026gt;  or simply open a command prompt in that folder. Then, pull the website:\ngit pull  Create your content Create your specific content by producing the necessary Markdown files and place them in the correct folders. See Creating content for details on how to do so.\nDeploy your local website Now that your local repository contains updated content, it is time to deploy it to your local docs folder. To do so, open a command prompt and run hugo at the root of the site\u0026rsquo;s local repository:\ncd \u0026lt;path-to-folder-root\u0026gt; hugo  Unless your code does not compile, you should get an output such as (possibly containing warnings)\nBuilding sites … WARN 2019/09/24 17:08:23 In the next Hugo version (0.58.0) we will change how $home.Pages behaves. If you want to list all regular pages, replace .Pages or .Data.Pages with .Site.RegularPages in your home page template. | EN +------------------|----+ Pages | 52 Paginator pages | 0 Non-page files | 6 Static files | 8 Processed images | 9 Aliases | 7 Sitemaps | 1 Cleaned | 0 Total in 265 ms  This means that Hugo has successfuly deployed your site to the docs folder. If you wish to view the website, you can host it locally using Hugo:\nhugo server -D  which should yield something like\nWatching for changes in /home/simon/git/ComputingClub/{content,data,static,themes} Watching for config changes in /home/simon/git/ComputingClub/config.toml, /home/simon/git/ComputingClub/config/_default Environment: \u0026quot;development\u0026quot; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ComputingClub/ (bind address 127.0.0.1) Press Ctrl+C to stop  The url http://localhost:1313/ComputingClub/ is where you find your local website (use that in your output as it may differ from mine). Also, as long a you do not close the server (by closing the command prompt or by typing Ctrl+C), Hugo will listen to any changes, meaning that any file saved in the root repository will trigger deployment. This is useful if you want to create your content and see it deployed instantaneously locally without calling Hugo each time.\nPush your changes Once your are satisfied with your local version, you need to push your changes to the master branch. First commit your changes:\ngit commit -a -m 'some description of your changes'  and finally push to the online repository\ngit push  The good way simplified using R ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"24c3d9913df929129210ecc33f7ffcce","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/edit_site/workflow/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ComputingClub/workshops/edit_site/workflow/","section":"workshops","summary":"The lazy way If you only need to add some post/meeting/workshop to the website, here is a simple way to deploy your new content to the website without much hassle.\n Create your content\u0026mdash;The first step is to create your specific content by producing the necessary Markdown files. See Creating content for details on how to do so. Push your content\u0026mdash;You then need to add your content to the website content directory.","tags":null,"title":"Update workflow","type":"docs"},{"authors":null,"categories":null,"content":" Git The Pro Git book by Scott Chacon and Ben Straub:\n 10. Git Internals: a deep understanding of git.  Oh Shit, Git!?! and Dangit, git!: two go-to resources when encountering git problems.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"9a5b4dfe316baa094a4582b0049b4a4c","permalink":"https://UMichStatistics.github.io/ComputingClub/workshops/resources/versioncontrol/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/ComputingClub/workshops/resources/versioncontrol/","section":"workshops","summary":"Git The Pro Git book by Scott Chacon and Ben Straub:\n 10. Git Internals: a deep understanding of git.  Oh Shit, Git!?! and Dangit, git!: two go-to resources when encountering git problems.","tags":null,"title":"Version Control","type":"docs"},{"authors":["Rob Trangucci"],"categories":null,"content":"","date":1574267400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574267400,"objectID":"32af726d9106f79e8394f9139efee55c","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/stan/","publishdate":"2019-09-25T15:16:15-04:00","relpermalink":"/ComputingClub/talk/stan/","section":"talk","summary":"''Stan is a state-of-the-art platform for statistical modeling and high-performance statistical computation. Thousands of users rely on Stan for statistical modeling, data analysis, and prediction in the social, biological, and physical sciences, engineering, and business.''---[Stan website](https://mc-stan.org/)","tags":[],"title":"Stan","type":"talk"},{"authors":["Ziping Xu"],"categories":null,"content":"","date":1573057800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1573057800,"objectID":"3af4adaabe529f9570ffabcb957e1cdd","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/cpython/","publishdate":"2019-09-25T15:16:15-04:00","relpermalink":"/ComputingClub/talk/cpython/","section":"talk","summary":"''Cython is an optimising static compiler for both the Python programming language and the extended Cython programming language (based on Pyrex). It makes writing C extensions for Python as easy as Python itself.''---[Cython website](https://cython.org/)","tags":[],"title":"Accelerating Python using Cython","type":"talk"},{"authors":["Jeffrey Regier"],"categories":null,"content":"","date":1571848200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571848200,"objectID":"5a57761e728210bb67200f27204207e6","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/julia/","publishdate":"2019-09-25T15:16:15-04:00","relpermalink":"/ComputingClub/talk/julia/","section":"talk","summary":"''Julia in a Nutshell---**Julia is fast!**\nJulia was designed from the beginning for high performance. Julia programs compile to efficient native code for multiple platforms via LLVM.\n**Dynamic.**\nJulia is dynamically-typed, feels like a scripting language, and has good support for interactive use.\n**Optionally typed.**\nJulia has a rich language of descriptive datatypes, and type declarations can be used to clarify and solidify programs.\n**General.**\nJulia uses multiple dispatch as a paradigm, making it easy to express many object-oriented and functional programming patterns. The standard library provides asynchronous I/O, process control, logging, profiling, a package manager, and more.\n**Easy to use.**\nJulia has high level syntax, making it an accessible language for programmers from any background or experience level.\n**Open source.**\nJulia is free for everyone to use, and all source code is publicly viewable on GitHub. ''---[Julia website](https://julialang.org/)","tags":[],"title":"The Julia language","type":"talk"},{"authors":["Simon Fontaine"],"categories":null,"content":"","date":1570638600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570638600,"objectID":"467270c8eb0bbafce29fa13db51a95e9","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/website/","publishdate":"2019-09-25T15:16:15-04:00","relpermalink":"/ComputingClub/talk/website/","section":"talk","summary":"In a workshop-type presentation, you will learn how to build a simple academic personal website based on the Academic theme by the Hugo engine as well as hosting it on GitHub Pages or UMich personal space.","tags":["Website","Markdown"],"title":"Building \u0026 Hosting a Simple Academic Website","type":"talk"},{"authors":["Dan Kessler"],"categories":null,"content":"","date":1570033800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570033800,"objectID":"a5aef24b959e024d1651bca037126c08","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/git/","publishdate":"2019-09-25T15:16:15-04:00","relpermalink":"/ComputingClub/talk/git/","section":"talk","summary":"While there are many online tutorials on how to use git, few attemp to teach what really happens behind the common commands. Understanding the differences and interactions between commited, staged and working file status as well as between local and remote repositories is essential to any git user in order to engage in adequate and pleasant version control.","tags":[],"title":"Git: a deeper perspective","type":"talk"},{"authors":["Simon Fontaine"],"categories":[],"content":"With the recent creation of the Statistics Computing Club, having a platform to share news, contents and resources was a priority.\nThe site is functionnal but still under construction, so please report issues to the GitHub repository to help us improve the site. Also, your comments and suggestions are more than welcome, so feel free to contact us!\nThe Committee is still looking for presenters for this fall\u0026rsquo;s meetings. You don\u0026rsquo;t need to be an expert of the topic you\u0026rsquo;ll present; providing exposure to a tool you find useful, to a package you think may help others or to some research methodology may be relevant to many other members! If you feel like presenting, we invite you to complete this form.\n","date":1569290776,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569290776,"objectID":"9c8fc5dc75abc298a528bb2179079a1e","permalink":"https://UMichStatistics.github.io/ComputingClub/post/welcome/","publishdate":"2019-09-23T22:06:16-04:00","relpermalink":"/ComputingClub/post/welcome/","section":"post","summary":"With the recent creation of the Statistics Computing Club, having a platform to share news, contents and resources was a priority.\nThe site is functionnal but still under construction, so please report issues to the GitHub repository to help us improve the site. Also, your comments and suggestions are more than welcome, so feel free to contact us!\nThe Committee is still looking for presenters for this fall\u0026rsquo;s meetings. You don\u0026rsquo;t need to be an expert of the topic you\u0026rsquo;ll present; providing exposure to a tool you find useful, to a package you think may help others or to some research methodology may be relevant to many other members!","tags":["Club"],"title":"Welcome to the Computing club's new website","type":"post"},{"authors":["Derek Hansen"],"categories":null,"content":"","date":1568835000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1568835000,"objectID":"52768db74e73cc94710d2441f091bcf6","permalink":"https://UMichStatistics.github.io/ComputingClub/talk/intro_purr/","publishdate":"2019-09-23T21:22:29-05:00","relpermalink":"/ComputingClub/talk/intro_purr/","section":"talk","summary":"Presentation of the Computing club and discussion of its purpose and means. Presentation of the R package `purrr` for functional programming.","tags":["Club","R","Functional programming"],"title":"Informational meeting \u0026 Functional Programming in R with purrr","type":"talk"}]